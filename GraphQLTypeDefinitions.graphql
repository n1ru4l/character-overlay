### THIS FILE IS AUTO GENERATED

"""
Instruction for establishing a live connection that is updated once the underlying data changes.
"""
directive @live(
  """
  Whether the query should be live or not.
  """
  if: Boolean = true
) on QUERY

type Query {
  characterEditor(editHash: ID!): CharacterEditor
  character(id: ID!): Character
}

union CharacterEditor = CharacterEditorView | Error

type CharacterEditorView {
  character: Character!
}

type Character {
  id: ID!
  name: String!
  imageUrl: String
  currentHealth: Int!
  maximumHealth: Int!
  hasMana: Boolean!
  currentMana: Int!
  maximumMana: Int!
  hasFatePoints: Boolean!
  currentFatePoints: Int!
  maximumFatePoints: Int!
}

type Error {
  reason: String!
}

type Mutation {
  updateCharacter(input: UpdateCharacterInput!): Boolean
  createCharacter: CreateCharacterResult!
}

input UpdateCharacterInput {
  editHash: String!
  updates: CharacterUpdateFields!
}

input CharacterUpdateFields {
  name: String
  maximumHealth: Int
  currentHealth: Int
  hasMana: Boolean
  maximumMana: Int
  currentMana: Int
  hasFatePoints: Boolean
  maximumFatePoints: Int
  currentFatePoints: Int
  imageUrl: String
}

union CreateCharacterResult = Error | CreateCharacterSuccess

type CreateCharacterSuccess {
  editHash: String!
}
